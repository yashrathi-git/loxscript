// var main = 4;
// {
//     // This is just a comment
//     var main = 5;
//     var eval_expr = 2*10/4+7 + (7/5);
//     print eval_expr;
//     print main;
// }
// print main;
// print 'Hello' + ' World!';
//
// if (2 == 2) {
//     print "Inside 2==2 block";
// } else {
//     print "Inside else block (shouldn't)";
// }
//
// {
//   var i = 0;
//   while (i < 10) {
//     print i;
//     i = i + 1;
//   }
// }

// fun makeCounter() {
//   var i = 0;
//   fun count() {
//     i = i + 1;
//     print i;
//   }
//
//   return count;
// }
//
// var counter = makeCounter();
// counter(); // "1".
// counter(); // "2".

// fun scope(a) {
//   var a = "local";
//   return a;
// }
// print scope(10);

// return 'te';

// fun test() {
//     fun wrapped() {
//         print "wrapped";
//     }
//
//     wrapped();
//
// }
//
// test();

// class Test {
//     constructor() {
//
//     }
// }
// var t = Test();
// t.expr = 'TEST';
// print t.expr;

// class Cake {
//   init() {
//     this.test_attr = 'xyz';
//     var adjective = "delicious";
//     print "The "  + " cake is " + adjective + "!";
//   }
//   test() {
//     print this.test_attr;
//   }
// }
//
// var cake = Cake();
// cake.flavor = "German chocolate";
// print cake.init();
// cake.test();

// class Foo {
//   bar() {}
// }
//
// print Foo().bar(); // expect: nil
//
//
// class Foo {
//   method(a, b) {}
// }
//
// // Foo().method(1); // expect runtime error: Expected 2 arguments but got 1.
//
//
// class Foo {
//   method() { }
// }
// var foo = Foo();https://www.youtube.com/watch?v=BwpeKaqaagQ
// print foo.method; // expect: <fn method>
// print foo; // expect: instance of Foo

class Doughnut {
  cook() {
    print "Fry until golden brown.";
  }
}

class BostonCream < Doughnut {
  cook() {
    super.cook();
    print "Pipe full of custard and coat with chocolate.";
  }
}

BostonCream().cook();